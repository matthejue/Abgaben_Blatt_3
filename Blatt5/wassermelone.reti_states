index:       1
instruction: LOADI DS 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          1
PC_SIMPLE:   1
SP:          0
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          00000000_00100000_00000000_00000000
DS_SIMPLE:   00000000_00100000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
  00003 ## load num1 and num2
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2 <- SP <- BAF <- CS
  00001 MULTI DS 000000_00000100_00000000; <- PC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       2
instruction: MULTI DS 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2
PC_SIMPLE:   2
SP:          0
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          10000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0; <- DS
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
  00003 ## load num1 and num2
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2 <- SP <- BAF <- CS
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- PC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       3
instruction: MOVE DS SP;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          3
PC_SIMPLE:   3
SP:          2147483648
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          10000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0; <- SP <- DS
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
  00003 ## load num1 and num2
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2 <- BAF <- CS
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- PC
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       4
instruction: MOVE DS BAF;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          4
PC_SIMPLE:   4
SP:          2147483648
SP_SIMPLE:   0
BAF:         2147483648
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          10000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0; <- SP <- BAF <- DS
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
  00003 ## load num1 and num2
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2 <- CS
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- PC
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       5
instruction: MOVE DS CS;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          5
PC_SIMPLE:   5
SP:          2147483648
SP_SIMPLE:   0
BAF:         2147483648
BAF_SIMPLE:  0
CS:          2147483648
CS_SIMPLE:   0
DS:          10000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0; <- SP <- BAF <- CS <- DS
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
  00003 ## load num1 and num2
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- PC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       6
instruction: ADDI SP 000000_00000000_01000111;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          6
PC_SIMPLE:   6
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483648
BAF_SIMPLE:  0
CS:          2147483648
CS_SIMPLE:   0
DS:          10000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0; <- BAF <- CS <- DS
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
  00003 ## load num1 and num2
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- PC
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       7
instruction: ADDI BAF 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          7
PC_SIMPLE:   7
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483648
CS_SIMPLE:   0
DS:          10000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0; <- CS <- DS
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- PC
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       8
instruction: ADDI CS 000000_00000000_00000011;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          8
PC_SIMPLE:   8
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0; <- DS
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- PC
  00009 MOVE CS PC;

index:       9
instruction: ADDI DS 000000_00000000_00110011;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          9
PC_SIMPLE:   9
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- PC

index:       10
instruction: MOVE CS PC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483651
PC_SIMPLE:   3
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- PC <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       11
instruction: ## load num1 and num2
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483652
PC_SIMPLE:   4
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2; <- PC
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       12
instruction: CALL INPUT IN2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC; <- PC
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       13
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000; <- PC
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       14
instruction: STOREIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC; <- PC
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       15
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001; <- PC
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       16
instruction: STOREIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2 <- PC
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       17
instruction: ## test num1 <= num2
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001; <- PC
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       18
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000; <- PC
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000 <- SP
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       19
instruction: LOADIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000 <- SP
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       20
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001; <- PC
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000 <- SP
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       21
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001; <- PC
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       22
instruction: LOADIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       23
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       24
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000; <- PC
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       25
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000; <- PC
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       26
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1; <- PC
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       27
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13; <- PC
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       28
instruction: JUMP== 13;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483681
PC_SIMPLE:   33
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001; <- PC
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       29
instruction: LOADIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483682
PC_SIMPLE:   34
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000; <- PC
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       30
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483683
PC_SIMPLE:   35
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000; <- PC
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       31
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483684
PC_SIMPLE:   36
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1; <- PC
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       32
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483685
PC_SIMPLE:   37
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8; <- PC
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       33
instruction: JUMP== 8;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483693
PC_SIMPLE:   45
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       34
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483694
PC_SIMPLE:   46
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001; <- PC
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       35
instruction: LOADIN SP IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483695
PC_SIMPLE:   47
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1; <- PC
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       36
instruction: SUB ACC IN1;
ACC:         11111111_11111111_11111111_11111110
ACC_SIMPLE:  00111111_11111111_11111111_11111110
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483696
PC_SIMPLE:   48
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2; <- PC
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       37
instruction: JUMP<= 2;
ACC:         11111111_11111111_11111111_11111110
ACC_SIMPLE:  00111111_11111111_11111111_11111110
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483698
PC_SIMPLE:   50
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24; <- PC
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       38
instruction: JUMP -24;
ACC:         11111111_11111111_11111111_11111110
ACC_SIMPLE:  00111111_11111111_11111111_11111110
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001; <- PC
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       39
instruction: LOADI ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483675
PC_SIMPLE:   27
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC; <- PC
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       40
instruction: CALL PRINT ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001101
IN2_SIMPLE:  00000000_00000000_00000000_00001101
PC:          2147483676
PC_SIMPLE:   28
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001; <- PC
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       41
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483677
PC_SIMPLE:   29
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC; <- PC
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       42
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483678
PC_SIMPLE:   30
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010; <- PC
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       43
instruction: ADDI SP 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483679
PC_SIMPLE:   31
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26; <- PC
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       44
instruction: JUMP!= -26;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC; <- PC
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       45
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000; <- PC
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       46
instruction: STOREIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC; <- PC
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       47
instruction: CALL INPUT ACC;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001; <- PC
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       48
instruction: STOREIN DS ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2 <- PC
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       49
instruction: ## test num1 <= num2
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001; <- PC
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       50
instruction: SUBI SP 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000; <- PC
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100 <- SP
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       51
instruction: LOADIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100 <- SP
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       52
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001; <- PC
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100 <- SP
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       53
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001; <- PC
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       54
instruction: LOADIN DS ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       55
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       56
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000; <- PC
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       57
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000; <- PC
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       58
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1; <- PC
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       59
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13; <- PC
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       60
instruction: JUMP== 13;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483681
PC_SIMPLE:   33
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001; <- PC
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       61
instruction: LOADIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483682
PC_SIMPLE:   34
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000; <- PC
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       62
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483683
PC_SIMPLE:   35
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000; <- PC
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       63
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483684
PC_SIMPLE:   36
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1; <- PC
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       64
instruction: AND ACC IN1;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483685
PC_SIMPLE:   37
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8; <- PC
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       65
instruction: JUMP== 8;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483686
PC_SIMPLE:   38
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000; <- PC
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       66
instruction: LOADI ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483687
PC_SIMPLE:   39
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC; <- PC
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       67
instruction: CALL PRINT ACC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001100
IN2_SIMPLE:  00000000_00000000_00000000_00001100
PC:          2147483688
PC_SIMPLE:   40
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001; <- PC
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       68
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483689
PC_SIMPLE:   41
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC; <- PC
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       69
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483690
PC_SIMPLE:   42
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010; <- PC
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       70
instruction: ADDI SP 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483691
PC_SIMPLE:   43
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38; <- PC
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       71
instruction: JUMP!= -38;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC; <- PC
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       72
instruction: CALL INPUT ACC;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000; <- PC
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001010 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       73
instruction: STOREIN DS ACC 000000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC; <- PC
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       74
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001; <- PC
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       75
instruction: STOREIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2 <- PC
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       76
instruction: ## test num1 <= num2
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001; <- PC
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001010 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       77
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000; <- PC
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100 <- SP
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       78
instruction: LOADIN DS ACC 000000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100 <- SP
  00071 00000000_00000000_00000000_00001010
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       79
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001; <- PC
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100 <- SP
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       80
instruction: SUBI SP 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001; <- PC
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       81
instruction: LOADIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       82
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       83
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000; <- PC
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       84
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000; <- PC
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       85
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1; <- PC
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       86
instruction: AND ACC IN1;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13; <- PC
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       87
instruction: JUMP== 13;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483669
PC_SIMPLE:   21
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001; <- PC
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       88
instruction: LOADIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483670
PC_SIMPLE:   22
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000; <- PC
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       89
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483671
PC_SIMPLE:   23
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000; <- PC
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       90
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00001100
ACC_SIMPLE:  00000000_00000000_00000000_00001100
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483672
PC_SIMPLE:   24
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1; <- PC
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       91
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483673
PC_SIMPLE:   25
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20; <- PC
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       92
instruction: JUMP== 20;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483693
PC_SIMPLE:   45
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       93
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483694
PC_SIMPLE:   46
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001; <- PC
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       94
instruction: LOADIN SP IN1 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483695
PC_SIMPLE:   47
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1; <- PC
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       95
instruction: SUB ACC IN1;
ACC:         11111111_11111111_11111111_11101010
ACC_SIMPLE:  00111111_11111111_11111111_11101010
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483696
PC_SIMPLE:   48
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2; <- PC
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       96
instruction: JUMP<= 2;
ACC:         11111111_11111111_11111111_11101010
ACC_SIMPLE:  00111111_11111111_11111111_11101010
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483698
PC_SIMPLE:   50
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24; <- PC
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       97
instruction: JUMP -24;
ACC:         11111111_11111111_11111111_11101010
ACC_SIMPLE:  00111111_11111111_11111111_11101010
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001; <- PC
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       98
instruction: LOADI ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483675
PC_SIMPLE:   27
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC; <- PC
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       99
instruction: CALL PRINT ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001011
IN2_SIMPLE:  00000000_00000000_00000000_00001011
PC:          2147483676
PC_SIMPLE:   28
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001; <- PC
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       100
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483677
PC_SIMPLE:   29
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC; <- PC
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       101
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483678
PC_SIMPLE:   30
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010; <- PC
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       102
instruction: ADDI SP 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483679
PC_SIMPLE:   31
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26; <- PC
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       103
instruction: JUMP!= -26;
ACC:         00000000_00000000_00000000_00001010
ACC_SIMPLE:  00000000_00000000_00000000_00001010
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC; <- PC
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       104
instruction: CALL INPUT ACC;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000; <- PC
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       105
instruction: STOREIN DS ACC 000000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC; <- PC
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       106
instruction: CALL INPUT ACC;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001; <- PC
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 00000000_00000000_00000000_00001100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       107
instruction: STOREIN DS ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2 <- PC
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       108
instruction: ## test num1 <= num2
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001; <- PC
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       109
instruction: SUBI SP 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000; <- PC
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100 <- SP
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       110
instruction: LOADIN DS ACC 000000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100 <- SP
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       111
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001; <- PC
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001100 <- SP
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       112
instruction: SUBI SP 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001; <- PC
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       113
instruction: LOADIN DS ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       114
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       115
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         00000000_00000000_00000000_00001100
IN1_SIMPLE:  00000000_00000000_00000000_00001100
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000; <- PC
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       116
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000; <- PC
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       117
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         11111111_11111111_11111111_11110110
ACC_SIMPLE:  00111111_11111111_11111111_11110110
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1; <- PC
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       118
instruction: AND ACC IN1;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13; <- PC
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       119
instruction: JUMP== 13;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483669
PC_SIMPLE:   21
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001; <- PC
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       120
instruction: LOADIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483670
PC_SIMPLE:   22
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000; <- PC
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       121
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483671
PC_SIMPLE:   23
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000; <- PC
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       122
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         11111111_11111111_11111111_11110100
ACC_SIMPLE:  00111111_11111111_11111111_11110100
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483672
PC_SIMPLE:   24
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1; <- PC
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       123
instruction: AND ACC IN1;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483673
PC_SIMPLE:   25
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20; <- PC
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       124
instruction: JUMP== 20;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001; <- PC
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       125
instruction: LOADI ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483675
PC_SIMPLE:   27
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC; <- PC
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       126
instruction: CALL PRINT ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001010
IN2_SIMPLE:  00000000_00000000_00000000_00001010
PC:          2147483676
PC_SIMPLE:   28
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001; <- PC
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       127
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483677
PC_SIMPLE:   29
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC; <- PC
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       128
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00001001
ACC_SIMPLE:  00000000_00000000_00000000_00001001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483678
PC_SIMPLE:   30
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010; <- PC
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- ACC <- IN2

index:       129
instruction: ADDI SP 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00001001
ACC_SIMPLE:  00000000_00000000_00000000_00001001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483679
PC_SIMPLE:   31
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26; <- PC
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- ACC <- IN2

index:       130
instruction: JUMP!= -26;
ACC:         00000000_00000000_00000000_00001001
ACC_SIMPLE:  00000000_00000000_00000000_00001001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC; <- PC
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- ACC <- IN2

index:       131
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000; <- PC
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110110 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       132
instruction: STOREIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC; <- PC
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       133
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001; <- PC
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110100
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       134
instruction: STOREIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2 <- PC
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       135
instruction: ## test num1 <= num2
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001; <- PC
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100
  00071 11111111_11111111_11111111_11110110 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       136
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000; <- PC
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100 <- SP
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       137
instruction: LOADIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100 <- SP
  00071 11111111_11111111_11111111_11110110
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       138
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001; <- PC
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110100 <- SP
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       139
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001; <- PC
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       140
instruction: LOADIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110100
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       141
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       142
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000; <- PC
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       143
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000; <- PC
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       144
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1; <- PC
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       145
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13; <- PC
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       146
instruction: JUMP== 13;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483681
PC_SIMPLE:   33
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001; <- PC
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       147
instruction: LOADIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483682
PC_SIMPLE:   34
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000; <- PC
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       148
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483683
PC_SIMPLE:   35
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000; <- PC
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       149
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483684
PC_SIMPLE:   36
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1; <- PC
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       150
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483685
PC_SIMPLE:   37
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8; <- PC
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       151
instruction: JUMP== 8;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483693
PC_SIMPLE:   45
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       152
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483694
PC_SIMPLE:   46
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001; <- PC
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       153
instruction: LOADIN SP IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483695
PC_SIMPLE:   47
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1; <- PC
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       154
instruction: SUB ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483696
PC_SIMPLE:   48
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2; <- PC
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       155
instruction: JUMP<= 2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483698
PC_SIMPLE:   50
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24; <- PC
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       156
instruction: JUMP -24;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001; <- PC
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       157
instruction: LOADI ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483675
PC_SIMPLE:   27
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC; <- PC
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       158
instruction: CALL PRINT ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001001
IN2_SIMPLE:  00000000_00000000_00000000_00001001
PC:          2147483676
PC_SIMPLE:   28
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001; <- PC
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC; <- IN2

index:       159
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483677
PC_SIMPLE:   29
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC; <- PC
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       160
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00001000
ACC_SIMPLE:  00000000_00000000_00000000_00001000
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483678
PC_SIMPLE:   30
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010; <- PC
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- ACC <- IN2
  00009 MOVE CS PC;

index:       161
instruction: ADDI SP 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00001000
ACC_SIMPLE:  00000000_00000000_00000000_00001000
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483679
PC_SIMPLE:   31
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26; <- PC
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- ACC <- IN2
  00009 MOVE CS PC;

index:       162
instruction: JUMP!= -26;
ACC:         00000000_00000000_00000000_00001000
ACC_SIMPLE:  00000000_00000000_00000000_00001000
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC; <- PC
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- ACC <- IN2
  00009 MOVE CS PC;

index:       163
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000; <- PC
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       164
instruction: STOREIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC; <- PC
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       165
instruction: CALL INPUT ACC;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001; <- PC
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       166
instruction: STOREIN DS ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2 <- PC
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       167
instruction: ## test num1 <= num2
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001; <- PC
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       168
instruction: SUBI SP 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000; <- PC
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011 <- SP
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       169
instruction: LOADIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011 <- SP
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       170
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001; <- PC
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011 <- SP
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       171
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001; <- PC
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       172
instruction: LOADIN DS ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       173
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       174
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000; <- PC
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       175
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000; <- PC
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       176
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1; <- PC
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       177
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13; <- PC
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       178
instruction: JUMP== 13;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483681
PC_SIMPLE:   33
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001; <- PC
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       179
instruction: LOADIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483682
PC_SIMPLE:   34
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000; <- PC
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       180
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483683
PC_SIMPLE:   35
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000; <- PC
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       181
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483684
PC_SIMPLE:   36
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1; <- PC
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       182
instruction: AND ACC IN1;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483685
PC_SIMPLE:   37
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8; <- PC
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       183
instruction: JUMP== 8;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483686
PC_SIMPLE:   38
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000; <- PC
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       184
instruction: LOADI ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483687
PC_SIMPLE:   39
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC; <- PC
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       185
instruction: CALL PRINT ACC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00001000
IN2_SIMPLE:  00000000_00000000_00000000_00001000
PC:          2147483688
PC_SIMPLE:   40
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001; <- PC
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011; <- IN2
  00009 MOVE CS PC;

index:       186
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483689
PC_SIMPLE:   41
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC; <- PC
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       187
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483690
PC_SIMPLE:   42
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010; <- PC
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       188
instruction: ADDI SP 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483691
PC_SIMPLE:   43
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38; <- PC
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       189
instruction: JUMP!= -38;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC; <- PC
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       190
instruction: CALL INPUT ACC;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000; <- PC
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00001011 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       191
instruction: STOREIN DS ACC 000000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC; <- PC
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       192
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001; <- PC
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       193
instruction: STOREIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2 <- PC
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       194
instruction: ## test num1 <= num2
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001; <- PC
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00001011 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       195
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000; <- PC
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101 <- SP
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       196
instruction: LOADIN DS ACC 000000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101 <- SP
  00071 00000000_00000000_00000000_00001011
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       197
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001; <- PC
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101 <- SP
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       198
instruction: SUBI SP 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001; <- PC
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       199
instruction: LOADIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       200
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       201
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000; <- PC
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       202
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000; <- PC
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       203
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1; <- PC
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       204
instruction: AND ACC IN1;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13; <- PC
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       205
instruction: JUMP== 13;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483669
PC_SIMPLE:   21
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001; <- PC
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       206
instruction: LOADIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483670
PC_SIMPLE:   22
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000; <- PC
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       207
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483671
PC_SIMPLE:   23
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000; <- PC
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       208
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00001011
ACC_SIMPLE:  00000000_00000000_00000000_00001011
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483672
PC_SIMPLE:   24
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1; <- PC
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       209
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483673
PC_SIMPLE:   25
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20; <- PC
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       210
instruction: JUMP== 20;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483693
PC_SIMPLE:   45
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       211
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483694
PC_SIMPLE:   46
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001; <- PC
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       212
instruction: LOADIN SP IN1 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483695
PC_SIMPLE:   47
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1; <- PC
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       213
instruction: SUB ACC IN1;
ACC:         11111111_11111111_11111111_11101010
ACC_SIMPLE:  00111111_11111111_11111111_11101010
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483696
PC_SIMPLE:   48
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2; <- PC
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       214
instruction: JUMP<= 2;
ACC:         11111111_11111111_11111111_11101010
ACC_SIMPLE:  00111111_11111111_11111111_11101010
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483698
PC_SIMPLE:   50
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24; <- PC
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       215
instruction: JUMP -24;
ACC:         11111111_11111111_11111111_11101010
ACC_SIMPLE:  00111111_11111111_11111111_11101010
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001; <- PC
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       216
instruction: LOADI ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483675
PC_SIMPLE:   27
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC; <- PC
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       217
instruction: CALL PRINT ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000111
IN2_SIMPLE:  00000000_00000000_00000000_00000111
PC:          2147483676
PC_SIMPLE:   28
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001; <- PC
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- IN2
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       218
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483677
PC_SIMPLE:   29
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC; <- PC
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       219
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000110
ACC_SIMPLE:  00000000_00000000_00000000_00000110
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483678
PC_SIMPLE:   30
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010; <- PC
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- ACC <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       220
instruction: ADDI SP 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000110
ACC_SIMPLE:  00000000_00000000_00000000_00000110
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483679
PC_SIMPLE:   31
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26; <- PC
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- ACC <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       221
instruction: JUMP!= -26;
ACC:         00000000_00000000_00000000_00000110
ACC_SIMPLE:  00000000_00000000_00000000_00000110
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC; <- PC
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- ACC <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       222
instruction: CALL INPUT ACC;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000; <- PC
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       223
instruction: STOREIN DS ACC 000000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC; <- PC
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       224
instruction: CALL INPUT ACC;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001; <- PC
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 00000000_00000000_00000000_00001011
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       225
instruction: STOREIN DS ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2 <- PC
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       226
instruction: ## test num1 <= num2
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001; <- PC
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       227
instruction: SUBI SP 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000; <- PC
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011 <- SP
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       228
instruction: LOADIN DS ACC 000000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011 <- SP
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       229
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001; <- PC
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00001011 <- SP
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       230
instruction: SUBI SP 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001; <- PC
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       231
instruction: LOADIN DS ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00001011
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       232
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       233
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00000000_00000000_00001011
IN1_SIMPLE:  00000000_00000000_00000000_00001011
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000; <- PC
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       234
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000; <- PC
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       235
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1; <- PC
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       236
instruction: AND ACC IN1;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13; <- PC
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       237
instruction: JUMP== 13;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483669
PC_SIMPLE:   21
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001; <- PC
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       238
instruction: LOADIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483670
PC_SIMPLE:   22
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000; <- PC
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       239
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483671
PC_SIMPLE:   23
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000; <- PC
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       240
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         11111111_11111111_11111111_11110101
ACC_SIMPLE:  00111111_11111111_11111111_11110101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483672
PC_SIMPLE:   24
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1; <- PC
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       241
instruction: AND ACC IN1;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483673
PC_SIMPLE:   25
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20; <- PC
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       242
instruction: JUMP== 20;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001; <- PC
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       243
instruction: LOADI ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483675
PC_SIMPLE:   27
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC; <- PC
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       244
instruction: CALL PRINT ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000110
IN2_SIMPLE:  00000000_00000000_00000000_00000110
PC:          2147483676
PC_SIMPLE:   28
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001; <- PC
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010; <- IN2
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       245
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483677
PC_SIMPLE:   29
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC; <- PC
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       246
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483678
PC_SIMPLE:   30
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010; <- PC
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- ACC <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       247
instruction: ADDI SP 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483679
PC_SIMPLE:   31
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26; <- PC
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- ACC <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       248
instruction: JUMP!= -26;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC; <- PC
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- ACC <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       249
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000; <- PC
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11110101 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       250
instruction: STOREIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC; <- PC
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       251
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001; <- PC
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11110101
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       252
instruction: STOREIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2 <- PC
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       253
instruction: ## test num1 <= num2
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001; <- PC
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101
  00071 11111111_11111111_11111111_11110101 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       254
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000; <- PC
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101 <- SP
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       255
instruction: LOADIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101 <- SP
  00071 11111111_11111111_11111111_11110101
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       256
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001; <- PC
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11110101 <- SP
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       257
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001; <- PC
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       258
instruction: LOADIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11110101
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       259
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       260
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000; <- PC
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       261
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000; <- PC
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       262
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1; <- PC
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       263
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13; <- PC
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       264
instruction: JUMP== 13;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483681
PC_SIMPLE:   33
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001; <- PC
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       265
instruction: LOADIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483682
PC_SIMPLE:   34
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000; <- PC
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       266
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483683
PC_SIMPLE:   35
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000; <- PC
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       267
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483684
PC_SIMPLE:   36
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1; <- PC
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       268
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483685
PC_SIMPLE:   37
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8; <- PC
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       269
instruction: JUMP== 8;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483693
PC_SIMPLE:   45
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       270
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483694
PC_SIMPLE:   46
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001; <- PC
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       271
instruction: LOADIN SP IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483695
PC_SIMPLE:   47
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1; <- PC
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       272
instruction: SUB ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483696
PC_SIMPLE:   48
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2; <- PC
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       273
instruction: JUMP<= 2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483698
PC_SIMPLE:   50
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24; <- PC
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       274
instruction: JUMP -24;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001; <- PC
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       275
instruction: LOADI ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483675
PC_SIMPLE:   27
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC; <- PC
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       276
instruction: CALL PRINT ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000101
IN2_SIMPLE:  00000000_00000000_00000000_00000101
PC:          2147483676
PC_SIMPLE:   28
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001; <- PC
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111; <- IN2
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       277
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483677
PC_SIMPLE:   29
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC; <- PC
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       278
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000100
ACC_SIMPLE:  00000000_00000000_00000000_00000100
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483678
PC_SIMPLE:   30
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010; <- PC
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       279
instruction: ADDI SP 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000100
ACC_SIMPLE:  00000000_00000000_00000000_00000100
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483679
PC_SIMPLE:   31
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26; <- PC
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       280
instruction: JUMP!= -26;
ACC:         00000000_00000000_00000000_00000100
ACC_SIMPLE:  00000000_00000000_00000000_00000100
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC; <- PC
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- ACC <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       281
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000; <- PC
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       282
instruction: STOREIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC; <- PC
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       283
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001; <- PC
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       284
instruction: STOREIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2 <- PC
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       285
instruction: ## test num1 <= num2
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001; <- PC
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       286
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000; <- PC
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000 <- SP
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       287
instruction: LOADIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000 <- SP
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       288
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001; <- PC
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000 <- SP
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       289
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001; <- PC
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       290
instruction: LOADIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       291
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       292
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000; <- PC
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       293
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000; <- PC
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       294
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1; <- PC
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       295
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13; <- PC
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       296
instruction: JUMP== 13;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483681
PC_SIMPLE:   33
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001; <- PC
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       297
instruction: LOADIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483682
PC_SIMPLE:   34
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000; <- PC
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       298
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483683
PC_SIMPLE:   35
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000; <- PC
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       299
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483684
PC_SIMPLE:   36
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1; <- PC
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       300
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483685
PC_SIMPLE:   37
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8; <- PC
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       301
instruction: JUMP== 8;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483693
PC_SIMPLE:   45
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       302
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483694
PC_SIMPLE:   46
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001; <- PC
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       303
instruction: LOADIN SP IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483695
PC_SIMPLE:   47
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1; <- PC
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       304
instruction: SUB ACC IN1;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483696
PC_SIMPLE:   48
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2; <- PC
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       305
instruction: JUMP<= 2;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483698
PC_SIMPLE:   50
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24; <- PC
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       306
instruction: JUMP -24;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001; <- PC
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       307
instruction: LOADI ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483675
PC_SIMPLE:   27
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC; <- PC
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       308
instruction: CALL PRINT ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483676
PC_SIMPLE:   28
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001; <- PC
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       309
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483677
PC_SIMPLE:   29
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC; <- PC
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       310
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483678
PC_SIMPLE:   30
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010; <- PC
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       311
instruction: ADDI SP 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483679
PC_SIMPLE:   31
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26; <- PC
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       312
instruction: JUMP!= -26;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC; <- PC
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       313
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000; <- PC
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       314
instruction: STOREIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC; <- PC
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       315
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001; <- PC
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000001
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       316
instruction: STOREIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2 <- PC
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       317
instruction: ## test num1 <= num2
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001; <- PC
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       318
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000; <- PC
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000001 <- SP
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       319
instruction: LOADIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000001 <- SP
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       320
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001; <- PC
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000001 <- SP
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       321
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001; <- PC
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       322
instruction: LOADIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000001
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       323
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       324
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000001
IN1_SIMPLE:  00000000_00000000_00000000_00000001
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000; <- PC
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN1
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       325
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000; <- PC
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       326
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1; <- PC
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       327
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13; <- PC
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       328
instruction: JUMP== 13;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483681
PC_SIMPLE:   33
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001; <- PC
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       329
instruction: LOADIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483682
PC_SIMPLE:   34
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000; <- PC
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       330
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483683
PC_SIMPLE:   35
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000; <- PC
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       331
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483684
PC_SIMPLE:   36
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1; <- PC
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       332
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483685
PC_SIMPLE:   37
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8; <- PC
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       333
instruction: JUMP== 8;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483693
PC_SIMPLE:   45
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       334
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483694
PC_SIMPLE:   46
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001; <- PC
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       335
instruction: LOADIN SP IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483695
PC_SIMPLE:   47
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1; <- PC
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       336
instruction: SUB ACC IN1;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483696
PC_SIMPLE:   48
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2; <- PC
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       337
instruction: JUMP<= 2;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483697
PC_SIMPLE:   49
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11; <- PC
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       338
instruction: JUMP -11;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483686
PC_SIMPLE:   38
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000; <- PC
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       339
instruction: LOADI ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483687
PC_SIMPLE:   39
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC; <- PC
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       340
instruction: CALL PRINT ACC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483688
PC_SIMPLE:   40
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001; <- PC
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       341
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483689
PC_SIMPLE:   41
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC; <- PC
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       342
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483690
PC_SIMPLE:   42
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010; <- PC
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       343
instruction: ADDI SP 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483691
PC_SIMPLE:   43
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38; <- PC
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       344
instruction: JUMP!= -38;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC; <- PC
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       345
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000; <- PC
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000001 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       346
instruction: STOREIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC; <- PC
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       347
instruction: CALL INPUT ACC;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001; <- PC
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       348
instruction: STOREIN DS ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2 <- PC
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       349
instruction: ## test num1 <= num2
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001; <- PC
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000001 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       350
instruction: SUBI SP 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000; <- PC
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000 <- SP
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       351
instruction: LOADIN DS ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000 <- SP
  00071 00000000_00000000_00000000_00000001
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       352
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001; <- PC
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000 <- SP
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       353
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001; <- PC
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       354
instruction: LOADIN DS ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       355
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       356
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000; <- PC
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       357
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000; <- PC
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       358
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1; <- PC
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       359
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13; <- PC
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       360
instruction: JUMP== 13;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483681
PC_SIMPLE:   33
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001; <- PC
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       361
instruction: LOADIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483682
PC_SIMPLE:   34
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000; <- PC
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       362
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483683
PC_SIMPLE:   35
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000; <- PC
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       363
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483684
PC_SIMPLE:   36
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1; <- PC
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       364
instruction: AND ACC IN1;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483685
PC_SIMPLE:   37
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8; <- PC
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       365
instruction: JUMP== 8;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483686
PC_SIMPLE:   38
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000; <- PC
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       366
instruction: LOADI ACC 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483687
PC_SIMPLE:   39
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC; <- PC
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       367
instruction: CALL PRINT ACC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483688
PC_SIMPLE:   40
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001; <- PC
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       368
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483689
PC_SIMPLE:   41
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC; <- PC
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       369
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483690
PC_SIMPLE:   42
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010; <- PC
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       370
instruction: ADDI SP 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483691
PC_SIMPLE:   43
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38; <- PC
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       371
instruction: JUMP!= -38;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC; <- PC
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       372
instruction: CALL INPUT ACC;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000; <- PC
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 00000000_00000000_00000000_00000000 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       373
instruction: STOREIN DS ACC 000000_00000000_00000000;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC; <- PC
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       374
instruction: CALL INPUT ACC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001; <- PC
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 11111111_11111111_11111111_11111111
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       375
instruction: STOREIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2 <- PC
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       376
instruction: ## test num1 <= num2
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001; <- PC
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11111111
  00071 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       377
instruction: SUBI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000; <- PC
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11111111 <- SP
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       378
instruction: LOADIN DS ACC 000000_00000000_00000000;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11111111 <- SP
  00071 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       379
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483718
SP_SIMPLE:   70
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001; <- PC
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 11111111_11111111_11111111_11111111 <- SP
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       380
instruction: SUBI SP 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001; <- PC
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       381
instruction: LOADIN DS ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001; <- PC
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 11111111_11111111_11111111_11111111
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       382
instruction: STOREIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       383
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000; <- PC
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       384
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000; <- PC
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       385
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1; <- PC
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       386
instruction: AND ACC IN1;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13; <- PC
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       387
instruction: JUMP== 13;
ACC:         10000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483669
PC_SIMPLE:   21
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- ACC <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001; <- PC
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       388
instruction: LOADIN SP ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483670
PC_SIMPLE:   22
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000; <- PC
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       389
instruction: LOADI IN1 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00100000_00000000_00000000
IN1_SIMPLE:  00000000_00100000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483671
PC_SIMPLE:   23
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000; <- PC
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       390
instruction: MULTI IN1 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483672
PC_SIMPLE:   24
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1; <- PC
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       391
instruction: AND ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483673
PC_SIMPLE:   25
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20; <- PC
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       392
instruction: JUMP== 20;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483693
PC_SIMPLE:   45
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010; <- PC
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       393
instruction: LOADIN SP ACC 000000_00000000_00000010;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         10000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483694
PC_SIMPLE:   46
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0; <- IN1
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001; <- PC
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       394
instruction: LOADIN SP IN1 000000_00000000_00000001;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483695
PC_SIMPLE:   47
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1; <- PC
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       395
instruction: SUB ACC IN1;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483696
PC_SIMPLE:   48
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2; <- PC
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       396
instruction: JUMP<= 2;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483698
PC_SIMPLE:   50
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24; <- PC
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       397
instruction: JUMP -24;
ACC:         11111111_11111111_11111111_11111111
ACC_SIMPLE:  00111111_11111111_11111111_11111111
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001; <- PC
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       398
instruction: LOADI ACC 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483675
PC_SIMPLE:   27
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC; <- PC
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       399
instruction: CALL PRINT ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483676
PC_SIMPLE:   28
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001; <- PC
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       400
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483677
PC_SIMPLE:   29
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC; <- PC
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000; <- ACC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       401
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483678
PC_SIMPLE:   30
SP:          2147483717
SP_SIMPLE:   69
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010; <- PC
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000 <- SP
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       402
instruction: ADDI SP 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483679
PC_SIMPLE:   31
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26; <- PC
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       403
instruction: JUMP!= -26;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483680
PC_SIMPLE:   32
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19; <- PC
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;

index:       404
instruction: JUMP 19;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483699
PC_SIMPLE:   51
SP:          2147483719
SP_SIMPLE:   71
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00110011
DS_SIMPLE:   00000000_00000000_00000000_00110011
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 ## load num1 and num2 <- CS
  00004 CALL INPUT IN2;
  00005 CALL INPUT ACC;
  00006 STOREIN DS ACC 000000_00000000_00000000;
  00007 CALL INPUT ACC;
  00008 STOREIN DS ACC 000000_00000000_00000001;
  00009 ## test num1 <= num2
  00010 SUBI SP 000000_00000000_00000001;
  00011 LOADIN DS ACC 000000_00000000_00000000;
  00012 STOREIN SP ACC 000000_00000000_00000001;
  00013 SUBI SP 000000_00000000_00000001;
  00014 LOADIN DS ACC 000000_00000000_00000001;
  00015 STOREIN SP ACC 000000_00000000_00000001;
  00016 LOADIN SP ACC 000000_00000000_00000010;
  00017 LOADI IN1 100000_00000000_00000000;
  00018 MULTI IN1 000000_00000100_00000000;
  00019 AND ACC IN1;
  00020 JUMP== 13;
  00021 LOADIN SP ACC 000000_00000000_00000001;
  00022 LOADI IN1 100000_00000000_00000000;
  00023 MULTI IN1 000000_00000100_00000000;
  00024 AND ACC IN1;
  00025 JUMP== 20;
  00026 LOADI ACC 000000_00000000_00000001;
  00027 CALL PRINT ACC;
  00028 SUBI IN2 000000_00000000_00000001;
  00029 MOVE IN2 ACC;
  00030 ADDI SP 000000_00000000_00000010;
  00031 JUMP!= -26;
  00032 JUMP 19;
  00033 LOADIN SP ACC 000000_00000000_00000001;
  00034 LOADI IN1 100000_00000000_00000000;
  00035 MULTI IN1 000000_00000100_00000000;
  00036 AND ACC IN1;
  00037 JUMP== 8;
  00038 LOADI ACC 000000_00000000_00000000;
  00039 CALL PRINT ACC;
  00040 SUBI IN2 000000_00000000_00000001;
  00041 MOVE IN2 ACC;
  00042 ADDI SP 000000_00000000_00000010;
  00043 JUMP!= -38;
  00044 JUMP 7;
  00045 LOADIN SP ACC 000000_00000000_00000010;
  00046 LOADIN SP IN1 000000_00000000_00000001;
  00047 SUB ACC IN1;
  00048 JUMP<= 2;
  00049 JUMP -11;
  00050 JUMP -24;
  00051 11111111_11111111_11111111_11111111 <- PC <- DS
  00052 00000000_00000000_00000000_00000000
  00053 00000000_00000000_00000000_00000000
  00054 00000000_00000000_00000000_00000000
  00055 00000000_00000000_00000000_00000000
  00056 00000000_00000000_00000000_00000000
  00057 00000000_00000000_00000000_00000000
  00058 00000000_00000000_00000000_00000000
  00059 00000000_00000000_00000000_00000000
  00060 00000000_00000000_00000000_00000000
  00061 00000000_00000000_00000000_00000000
  00062 00000000_00000000_00000000_00000000
  00063 00000000_00000000_00000000_00000000
  00064 00000000_00000000_00000000_00000000
  00065 00000000_00000000_00000000_00000000
  00066 00000000_00000000_00000000_00000000
  00067 00000000_00000000_00000000_00000000
  00068 00000000_00000000_00000000_00000000
  00069 00000000_00000000_00000000_00000000
  00070 00000000_00000000_00000000_00000000
  00071 11111111_11111111_11111111_11111111 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_01000111;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00110011;
  00009 MOVE CS PC;