index:       1
instruction: LOADI DS 100000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          1
PC_SIMPLE:   1
SP:          0
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          00000000_00100000_00000000_00000000
DS_SIMPLE:   00000000_00100000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
  00003 MOVE DS SP;
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2 <- SP <- BAF <- CS
  00001 MULTI DS 000000_00000100_00000000; <- PC
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       2
instruction: MULTI DS 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2
PC_SIMPLE:   2
SP:          0
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          10000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0; <- DS
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
  00003 MOVE DS SP;
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2 <- SP <- BAF <- CS
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- PC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       3
instruction: MOVE DS SP;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          3
PC_SIMPLE:   3
SP:          2147483648
SP_SIMPLE:   0
BAF:         0
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          10000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0; <- SP <- DS
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
  00003 MOVE DS SP;
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2 <- BAF <- CS
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- PC
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       4
instruction: MOVE DS BAF;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          4
PC_SIMPLE:   4
SP:          2147483648
SP_SIMPLE:   0
BAF:         2147483648
BAF_SIMPLE:  0
CS:          0
CS_SIMPLE:   0
DS:          10000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0; <- SP <- BAF <- DS
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
  00003 MOVE DS SP;
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2 <- CS
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- PC
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       5
instruction: MOVE DS CS;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          5
PC_SIMPLE:   5
SP:          2147483648
SP_SIMPLE:   0
BAF:         2147483648
BAF_SIMPLE:  0
CS:          2147483648
CS_SIMPLE:   0
DS:          10000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0; <- SP <- BAF <- CS <- DS
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
  00003 MOVE DS SP;
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- PC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       6
instruction: ADDI SP 000000_00000000_00101000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          6
PC_SIMPLE:   6
SP:          2147483688
SP_SIMPLE:   40
BAF:         2147483648
BAF_SIMPLE:  0
CS:          2147483648
CS_SIMPLE:   0
DS:          10000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0; <- BAF <- CS <- DS
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
  00003 MOVE DS SP;
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010; <- PC
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       7
instruction: ADDI BAF 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          7
PC_SIMPLE:   7
SP:          2147483688
SP_SIMPLE:   40
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483648
CS_SIMPLE:   0
DS:          10000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0; <- CS <- DS
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP;
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- PC
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       8
instruction: ADDI CS 000000_00000000_00000011;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          8
PC_SIMPLE:   8
SP:          2147483688
SP_SIMPLE:   40
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0; <- DS
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010; <- PC
  00009 MOVE CS PC;

index:       9
instruction: ADDI DS 000000_00000000_00011010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          9
PC_SIMPLE:   9
SP:          2147483688
SP_SIMPLE:   40
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00011010
DS_SIMPLE:   00000000_00000000_00000000_00011010
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- DS
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC; <- PC

index:       10
instruction: MOVE CS PC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483651
PC_SIMPLE:   3
SP:          2147483688
SP_SIMPLE:   40
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00011010
DS_SIMPLE:   00000000_00000000_00000000_00011010
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- PC <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- DS
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000 <- SP
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       11
instruction: MOVE DS SP;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483652
PC_SIMPLE:   4
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00011010
DS_SIMPLE:   00000000_00000000_00000000_00011010
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100; <- PC
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP <- DS
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1 <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       12
instruction: LOADI IN2 000000_00000000_00000100;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00011010
DS_SIMPLE:   00000000_00000000_00000000_00011010
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000; <- PC
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP <- DS
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       13
instruction: LOADI IN1 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00011010
DS_SIMPLE:   00000000_00000000_00000000_00011010
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000; <- PC
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP <- DS
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       14
instruction: LOADI IN1 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00011010
DS_SIMPLE:   00000000_00000000_00000000_00011010
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000; <- PC
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP <- DS
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       15
instruction: MULTI IN1 000000_00000001_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          10000000_00000000_00000000_00011010
DS_SIMPLE:   00000000_00000000_00000000_00011010
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000; <- PC
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP <- DS
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       16
instruction: LOADI DS 010000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          00000000_00010000_00000000_00000000
DS_SIMPLE:   00000000_00010000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000; <- PC
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       17
instruction: MULTI DS 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       18
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       19
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       20
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       21
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       22
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       23
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001; <- PC
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       24
instruction: ADD IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_00000000_10101010
IN1_SIMPLE:  00000000_00000000_00000000_10101010
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010; <- PC
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       25
instruction: OPLUS ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_00000000_10101010
IN1_SIMPLE:  00000000_00000000_00000000_10101010
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010; <- PC
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       26
instruction: STORE ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_00000000_10101010
IN1_SIMPLE:  00000000_00000000_00000000_10101010
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001; <- PC
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       27
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_00000000_10101010
IN1_SIMPLE:  00000000_00000000_00000000_10101010
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC; <- PC
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       28
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_00000000_10101010
IN1_SIMPLE:  00000000_00000000_00000000_10101010
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11; <- PC
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       29
instruction: JUMP> -11;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_00000000_10101010
IN1_SIMPLE:  00000000_00000000_00000000_10101010
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000; <- PC
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       30
instruction: MULTI IN1 000000_00000001_00000000;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000; <- PC
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       31
instruction: LOADI DS 010000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          00000000_00010000_00000000_00000000
DS_SIMPLE:   00000000_00010000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000; <- PC
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       32
instruction: MULTI DS 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       33
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       34
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       35
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       36
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       37
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       38
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001; <- PC
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       39
instruction: ADD IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_10101010_10101010
IN1_SIMPLE:  00000000_00000000_10101010_10101010
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010; <- PC
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       40
instruction: OPLUS ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_10101010_10101010
IN1_SIMPLE:  00000000_00000000_10101010_10101010
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010; <- PC
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       41
instruction: STORE ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_10101010_10101010
IN1_SIMPLE:  00000000_00000000_10101010_10101010
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001; <- PC
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       42
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_10101010_10101010
IN1_SIMPLE:  00000000_00000000_10101010_10101010
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC; <- PC
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       43
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_10101010_10101010
IN1_SIMPLE:  00000000_00000000_10101010_10101010
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11; <- PC
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       44
instruction: JUMP> -11;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_10101010_10101010
IN1_SIMPLE:  00000000_00000000_10101010_10101010
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000; <- PC
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       45
instruction: MULTI IN1 000000_00000001_00000000;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000; <- PC
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       46
instruction: LOADI DS 010000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          00000000_00010000_00000000_00000000
DS_SIMPLE:   00000000_00010000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000; <- PC
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       47
instruction: MULTI DS 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       48
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       49
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       50
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       51
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       52
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       53
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001; <- PC
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       54
instruction: ADD IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_10101010_10101010_10101010
IN1_SIMPLE:  00000000_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010; <- PC
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       55
instruction: OPLUS ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_10101010_10101010_10101010
IN1_SIMPLE:  00000000_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010; <- PC
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       56
instruction: STORE ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_10101010_10101010_10101010
IN1_SIMPLE:  00000000_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001; <- PC
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       57
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_10101010_10101010_10101010
IN1_SIMPLE:  00000000_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC; <- PC
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       58
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_10101010_10101010_10101010
IN1_SIMPLE:  00000000_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11; <- PC
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       59
instruction: JUMP> -11;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_10101010_10101010_10101010
IN1_SIMPLE:  00000000_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000; <- PC
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       60
instruction: MULTI IN1 000000_00000001_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000; <- PC
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       61
instruction: LOADI DS 010000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          00000000_00010000_00000000_00000000
DS_SIMPLE:   00000000_00010000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000; <- PC
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       62
instruction: MULTI DS 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       63
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       64
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       65
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       66
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       67
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       68
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001; <- PC
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       69
instruction: ADD IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010; <- PC
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       70
instruction: OPLUS ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010; <- PC
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       71
instruction: STORE ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001; <- PC
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       72
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC; <- PC
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       73
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11; <- PC
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       74
instruction: JUMP> -11;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000; <- PC
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 00000000_00000000_00000000_00000000 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       75
instruction: STOREIN SP IN1 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483674
SP_SIMPLE:   26
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001; <- PC
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010 <- SP
  00027 00000000_00000000_00000000_00000000
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       76
instruction: ADDI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483669
PC_SIMPLE:   21
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC; <- PC
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       77
instruction: MOVE IN1 ACC;
ACC:         10101010_10101010_10101010_10101010
ACC_SIMPLE:  00101010_10101010_10101010_10101010
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483670
PC_SIMPLE:   22
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000; <- PC
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       78
instruction: LOADI ACC 011100_00000000_00000000;
ACC:         00000000_00011100_00000000_00000000
ACC_SIMPLE:  00000000_00011100_00000000_00000000
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483671
PC_SIMPLE:   23
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000; <- PC
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       79
instruction: MULTI ACC 000000_00000100_00000000;
ACC:         01110000_00000000_00000000_00000000
ACC_SIMPLE:  00110000_00000000_00000000_00000000
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483672
PC_SIMPLE:   24
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1; <- PC
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       80
instruction: OPLUS ACC IN1;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483673
PC_SIMPLE:   25
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21; <- PC
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       81
instruction: JUMP!= -21;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483652
PC_SIMPLE:   4
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100; <- PC
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       82
instruction: LOADI IN2 000000_00000000_00000100;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000; <- PC
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       83
instruction: LOADI IN1 000000_00000000_00000000;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000; <- PC
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       84
instruction: LOADI IN1 000000_00000000_00000000;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000; <- PC
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       85
instruction: MULTI IN1 000000_00000001_00000000;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000; <- PC
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       86
instruction: LOADI DS 010000_00000000_00000000;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          00000000_00010000_00000000_00000000
DS_SIMPLE:   00000000_00010000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000; <- PC
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       87
instruction: MULTI DS 000000_00000100_00000000;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       88
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       89
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       90
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       91
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       92
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       93
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001; <- PC
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       94
instruction: ADD IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_00000000_10101010
IN1_SIMPLE:  00000000_00000000_00000000_10101010
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010; <- PC
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       95
instruction: OPLUS ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_00000000_10101010
IN1_SIMPLE:  00000000_00000000_00000000_10101010
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010; <- PC
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       96
instruction: STORE ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_00000000_10101010
IN1_SIMPLE:  00000000_00000000_00000000_10101010
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001; <- PC
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       97
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_00000000_10101010
IN1_SIMPLE:  00000000_00000000_00000000_10101010
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC; <- PC
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       98
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_00000000_10101010
IN1_SIMPLE:  00000000_00000000_00000000_10101010
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11; <- PC
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       99
instruction: JUMP> -11;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_00000000_10101010
IN1_SIMPLE:  00000000_00000000_00000000_10101010
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000; <- PC
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       100
instruction: MULTI IN1 000000_00000001_00000000;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000; <- PC
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       101
instruction: LOADI DS 010000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          00000000_00010000_00000000_00000000
DS_SIMPLE:   00000000_00010000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000; <- PC
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       102
instruction: MULTI DS 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       103
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       104
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       105
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       106
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       107
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       108
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_10101010_00000000
IN1_SIMPLE:  00000000_00000000_10101010_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001; <- PC
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       109
instruction: ADD IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_10101010_10101010
IN1_SIMPLE:  00000000_00000000_10101010_10101010
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010; <- PC
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       110
instruction: OPLUS ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_10101010_10101010
IN1_SIMPLE:  00000000_00000000_10101010_10101010
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010; <- PC
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       111
instruction: STORE ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_10101010_10101010
IN1_SIMPLE:  00000000_00000000_10101010_10101010
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001; <- PC
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       112
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_10101010_10101010
IN1_SIMPLE:  00000000_00000000_10101010_10101010
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC; <- PC
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       113
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_10101010_10101010
IN1_SIMPLE:  00000000_00000000_10101010_10101010
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11; <- PC
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       114
instruction: JUMP> -11;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_10101010_10101010
IN1_SIMPLE:  00000000_00000000_10101010_10101010
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000; <- PC
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       115
instruction: MULTI IN1 000000_00000001_00000000;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000; <- PC
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       116
instruction: LOADI DS 010000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          00000000_00010000_00000000_00000000
DS_SIMPLE:   00000000_00010000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000; <- PC
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       117
instruction: MULTI DS 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       118
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       119
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       120
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       121
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       122
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       123
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_10101010_10101010_00000000
IN1_SIMPLE:  00000000_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001; <- PC
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       124
instruction: ADD IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_10101010_10101010_10101010
IN1_SIMPLE:  00000000_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010; <- PC
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       125
instruction: OPLUS ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_10101010_10101010_10101010
IN1_SIMPLE:  00000000_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010; <- PC
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       126
instruction: STORE ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_10101010_10101010_10101010
IN1_SIMPLE:  00000000_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001; <- PC
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       127
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_10101010_10101010_10101010
IN1_SIMPLE:  00000000_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC; <- PC
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       128
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_10101010_10101010_10101010
IN1_SIMPLE:  00000000_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11; <- PC
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       129
instruction: JUMP> -11;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_10101010_10101010_10101010
IN1_SIMPLE:  00000000_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000; <- PC
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       130
instruction: MULTI IN1 000000_00000001_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000; <- PC
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       131
instruction: LOADI DS 010000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          00000000_00010000_00000000_00000000
DS_SIMPLE:   00000000_00010000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000; <- PC
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       132
instruction: MULTI DS 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       133
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       134
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       135
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       136
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       137
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       138
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         10101010_10101010_10101010_00000000
IN1_SIMPLE:  00101010_10101010_10101010_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001; <- PC
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       139
instruction: ADD IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010; <- PC
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       140
instruction: OPLUS ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010; <- PC
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       141
instruction: STORE ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001; <- PC
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       142
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC; <- PC
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       143
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11; <- PC
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       144
instruction: JUMP> -11;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000; <- PC
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 00000000_00000000_00000000_00000000 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       145
instruction: STOREIN SP IN1 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483675
SP_SIMPLE:   27
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001; <- PC
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010 <- SP
  00028 00000000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       146
instruction: ADDI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483669
PC_SIMPLE:   21
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC; <- PC
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       147
instruction: MOVE IN1 ACC;
ACC:         10101010_10101010_10101010_10101010
ACC_SIMPLE:  00101010_10101010_10101010_10101010
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483670
PC_SIMPLE:   22
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000; <- PC
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       148
instruction: LOADI ACC 011100_00000000_00000000;
ACC:         00000000_00011100_00000000_00000000
ACC_SIMPLE:  00000000_00011100_00000000_00000000
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483671
PC_SIMPLE:   23
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000; <- PC
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       149
instruction: MULTI ACC 000000_00000100_00000000;
ACC:         01110000_00000000_00000000_00000000
ACC_SIMPLE:  00110000_00000000_00000000_00000000
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483672
PC_SIMPLE:   24
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1; <- PC
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       150
instruction: OPLUS ACC IN1;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483673
PC_SIMPLE:   25
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21; <- PC
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       151
instruction: JUMP!= -21;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483652
PC_SIMPLE:   4
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100; <- PC
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       152
instruction: LOADI IN2 000000_00000000_00000100;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         10101010_10101010_10101010_10101010
IN1_SIMPLE:  00101010_10101010_10101010_10101010
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483653
PC_SIMPLE:   5
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000; <- PC
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       153
instruction: LOADI IN1 000000_00000000_00000000;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483654
PC_SIMPLE:   6
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000; <- PC
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       154
instruction: LOADI IN1 000000_00000000_00000000;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000; <- PC
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       155
instruction: MULTI IN1 000000_00000001_00000000;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000; <- PC
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       156
instruction: LOADI DS 010000_00000000_00000000;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          00000000_00010000_00000000_00000000
DS_SIMPLE:   00000000_00010000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000; <- PC
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       157
instruction: MULTI DS 000000_00000100_00000000;
ACC:         11011010_10101010_10101010_10101010
ACC_SIMPLE:  00011010_10101010_10101010_10101010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       158
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       159
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       160
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       161
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       162
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       163
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_00000000_00000000
IN1_SIMPLE:  00000000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001; <- PC
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_10101010
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN1
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       164
instruction: ADD IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_00000000_01110000
IN1_SIMPLE:  00000000_00000000_00000000_01110000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010; <- PC
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       165
instruction: OPLUS ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_00000000_01110000
IN1_SIMPLE:  00000000_00000000_00000000_01110000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010; <- PC
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       166
instruction: STORE ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_00000000_01110000
IN1_SIMPLE:  00000000_00000000_00000000_01110000
IN2:         00000000_00000000_00000000_00000100
IN2_SIMPLE:  00000000_00000000_00000000_00000100
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001; <- PC
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS; <- IN2
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       167
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_00000000_01110000
IN1_SIMPLE:  00000000_00000000_00000000_01110000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC; <- PC
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       168
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_00000000_01110000
IN1_SIMPLE:  00000000_00000000_00000000_01110000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11; <- PC
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       169
instruction: JUMP> -11;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_00000000_01110000
IN1_SIMPLE:  00000000_00000000_00000000_01110000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000; <- PC
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       170
instruction: MULTI IN1 000000_00000001_00000000;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000; <- PC
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       171
instruction: LOADI DS 010000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          00000000_00010000_00000000_00000000
DS_SIMPLE:   00000000_00010000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000; <- PC
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       172
instruction: MULTI DS 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000011
ACC_SIMPLE:  00000000_00000000_00000000_00000011
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- ACC <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       173
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       174
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       175
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       176
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       177
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       178
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001; <- PC
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_01110000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       179
instruction: ADD IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010; <- PC
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       180
instruction: OPLUS ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010; <- PC
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       181
instruction: STORE ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000011
IN2_SIMPLE:  00000000_00000000_00000000_00000011
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001; <- PC
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF; <- IN2
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       182
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC; <- PC
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       183
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11; <- PC
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       184
instruction: JUMP> -11;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_00000000_01110000_00000000
IN1_SIMPLE:  00000000_00000000_01110000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000; <- PC
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       185
instruction: MULTI IN1 000000_00000001_00000000;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000; <- PC
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       186
instruction: LOADI DS 010000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          00000000_00010000_00000000_00000000
DS_SIMPLE:   00000000_00010000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000; <- PC
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       187
instruction: MULTI DS 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       188
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       189
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       190
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       191
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       192
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       193
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001; <- PC
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       194
instruction: ADD IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010; <- PC
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- ACC <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       195
instruction: OPLUS ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010; <- PC
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       196
instruction: STORE ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000010
IN2_SIMPLE:  00000000_00000000_00000000_00000010
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001; <- PC
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP; <- IN2
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       197
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC; <- PC
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       198
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11; <- PC
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       199
instruction: JUMP> -11;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         00000000_01110000_00000000_00000000
IN1_SIMPLE:  00000000_01110000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483655
PC_SIMPLE:   7
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000; <- PC
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       200
instruction: MULTI IN1 000000_00000001_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483656
PC_SIMPLE:   8
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000; <- PC
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       201
instruction: LOADI DS 010000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483657
PC_SIMPLE:   9
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          00000000_00010000_00000000_00000000
DS_SIMPLE:   00000000_00010000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000; <- PC
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       202
instruction: MULTI DS 000000_00000100_00000000;
ACC:         00000000_00000000_00000000_00000001
ACC_SIMPLE:  00000000_00000000_00000000_00000001
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- ACC <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       203
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       204
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       205
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483658
PC_SIMPLE:   10
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010; <- PC
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       206
instruction: LOAD ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000111
ACC_SIMPLE:  00000000_00000000_00000000_00000111
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483659
PC_SIMPLE:   11
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010; <- PC
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011; <- ACC
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       207
instruction: ANDI ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483660
PC_SIMPLE:   12
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2; <- PC
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       208
instruction: JUMP== -2;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483661
PC_SIMPLE:   13
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001; <- PC
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       209
instruction: ADD IN1 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000010
ACC_SIMPLE:  00000000_00000000_00000000_00000010
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483662
PC_SIMPLE:   14
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010; <- PC
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP; <- ACC
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       210
instruction: OPLUS ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483663
PC_SIMPLE:   15
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010; <- PC
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000111
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       211
instruction: STORE ACC 000000_00000000_00000010;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000001
IN2_SIMPLE:  00000000_00000000_00000000_00000001
PC:          2147483664
PC_SIMPLE:   16
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001; <- PC
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000;
  00001 MULTI DS 000000_00000100_00000000; <- IN2
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       212
instruction: SUBI IN2 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000101
ACC_SIMPLE:  00000000_00000000_00000000_00000101
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483665
PC_SIMPLE:   17
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC; <- PC
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000; <- ACC
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       213
instruction: MOVE IN2 ACC;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483666
PC_SIMPLE:   18
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11; <- PC
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       214
instruction: JUMP> -11;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483667
PC_SIMPLE:   19
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000; <- PC
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 00000000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       215
instruction: STOREIN SP IN1 000000_00000000_00000000;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483668
PC_SIMPLE:   20
SP:          2147483676
SP_SIMPLE:   28
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001; <- PC
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 01110000_00000000_00000000_00000000 <- SP
  00029 00000000_00000000_00000000_00000000
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       216
instruction: ADDI SP 000000_00000000_00000001;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483669
PC_SIMPLE:   21
SP:          2147483677
SP_SIMPLE:   29
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC; <- PC
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 01110000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000 <- SP
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       217
instruction: MOVE IN1 ACC;
ACC:         01110000_00000000_00000000_00000000
ACC_SIMPLE:  00110000_00000000_00000000_00000000
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483670
PC_SIMPLE:   22
SP:          2147483677
SP_SIMPLE:   29
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000; <- PC
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 01110000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000 <- SP
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       218
instruction: LOADI ACC 011100_00000000_00000000;
ACC:         00000000_00011100_00000000_00000000
ACC_SIMPLE:  00000000_00011100_00000000_00000000
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483671
PC_SIMPLE:   23
SP:          2147483677
SP_SIMPLE:   29
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000; <- PC
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 01110000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000 <- SP
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       219
instruction: MULTI ACC 000000_00000100_00000000;
ACC:         01110000_00000000_00000000_00000000
ACC_SIMPLE:  00110000_00000000_00000000_00000000
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483672
PC_SIMPLE:   24
SP:          2147483677
SP_SIMPLE:   29
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1; <- PC
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 01110000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000 <- SP
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       220
instruction: OPLUS ACC IN1;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483673
PC_SIMPLE:   25
SP:          2147483677
SP_SIMPLE:   29
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21; <- PC
  00026 10101010_10101010_10101010_10101010
  00027 10101010_10101010_10101010_10101010
  00028 01110000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000 <- SP
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;

index:       221
instruction: JUMP!= -21;
ACC:         00000000_00000000_00000000_00000000
ACC_SIMPLE:  00000000_00000000_00000000_00000000
IN1:         01110000_00000000_00000000_00000000
IN1_SIMPLE:  00110000_00000000_00000000_00000000
IN2:         00000000_00000000_00000000_00000000
IN2_SIMPLE:  00000000_00000000_00000000_00000000
PC:          2147483674
PC_SIMPLE:   26
SP:          2147483677
SP_SIMPLE:   29
BAF:         2147483650
BAF_SIMPLE:  2
CS:          2147483651
CS_SIMPLE:   3
DS:          01000000_00000000_00000000_00000000
DS_SIMPLE:   00000000_00000000_00000000_00000000
SRAM:
  00000 JUMP 0;
  00001 10000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000000 <- BAF
  00003 MOVE DS SP; <- CS
  00004 LOADI IN2 000000_00000000_00000100;
  00005 LOADI IN1 000000_00000000_00000000;
  00006 LOADI IN1 000000_00000000_00000000;
  00007 MULTI IN1 000000_00000001_00000000;
  00008 LOADI DS 010000_00000000_00000000;
  00009 MULTI DS 000000_00000100_00000000;
  00010 LOAD ACC 000000_00000000_00000010;
  00011 ANDI ACC 000000_00000000_00000010;
  00012 JUMP== -2;
  00013 ADD IN1 000000_00000000_00000001;
  00014 OPLUS ACC 000000_00000000_00000010;
  00015 STORE ACC 000000_00000000_00000010;
  00016 SUBI IN2 000000_00000000_00000001;
  00017 MOVE IN2 ACC;
  00018 JUMP> -11;
  00019 STOREIN SP IN1 000000_00000000_00000000;
  00020 ADDI SP 000000_00000000_00000001;
  00021 MOVE IN1 ACC;
  00022 LOADI ACC 011100_00000000_00000000;
  00023 MULTI ACC 000000_00000100_00000000;
  00024 OPLUS ACC IN1;
  00025 JUMP!= -21;
  00026 10101010_10101010_10101010_10101010 <- PC
  00027 10101010_10101010_10101010_10101010
  00028 01110000_00000000_00000000_00000000
  00029 00000000_00000000_00000000_00000000 <- SP
  00030 00000000_00000000_00000000_00000000
  00031 00000000_00000000_00000000_00000000
  00032 00000000_00000000_00000000_00000000
  00033 00000000_00000000_00000000_00000000
  00034 00000000_00000000_00000000_00000000
  00035 00000000_00000000_00000000_00000000
  00036 00000000_00000000_00000000_00000000
  00037 00000000_00000000_00000000_00000000
  00038 00000000_00000000_00000000_00000000
  00039 00000000_00000000_00000000_00000000
  00040 00000000_00000000_00000000_00000000
UART:
  00000 00000000_00000000_00000000_00000000 <- DS
  00001 00000000_00000000_00000000_00000000
  00002 00000000_00000000_00000000_00000101
EPROM:
  00000 LOADI DS 100000_00000000_00000000; <- ACC <- IN2
  00001 MULTI DS 000000_00000100_00000000;
  00002 MOVE DS SP;
  00003 MOVE DS BAF;
  00004 MOVE DS CS;
  00005 ADDI SP 000000_00000000_00101000;
  00006 ADDI BAF 000000_00000000_00000010;
  00007 ADDI CS 000000_00000000_00000011;
  00008 ADDI DS 000000_00000000_00011010;
  00009 MOVE CS PC;